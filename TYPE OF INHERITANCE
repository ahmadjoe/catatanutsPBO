                                                    TYPE OF INHERITANCE
Type of Inheritance (jenis pewarisan) terdiri dari empat macam type of inheritance yaitu :
1.	Default pass
2.	Overriding
3.	Super
4.	Multiple inheritance

Default terdiri dari property dan method, berikut adalah contoh programnya :

class Fish: 
	def __init__(self, first_name, last_name="Fish", skeleton="bone", eyelids=False): 
		self.first_name = first_name 
		self.last_name = last_name 
		self.skeleton = skeleton 
		self.eyelids = eyelids 
	def swim(self): 
		print("The fish is swimming.") 
	def swim_backwards(self): 
		print("The fish can swim backwards.") 

>>default memiliki properti dan metode(method)
contoh :

class Fish: 
	def __init__(self, first_name, last_name="Fish", skeleton="bone", eyelids=False): 
		self.first_name = first_name 
		self.last_name = last_name 
		self.skeleton = skeleton 
		self.eyelids = eyelids 
	def swim(self): 
		print("The fish is swimming.") 
	def swim_backwards(self): 
		print("The fish can swim backwards.") 


>>Overriding: kelas anak dapat memodifikasi nilai property/method pada kelas induk.
Terkadang, bagaimanapun, kita akan ingin menggunakan beberapa perilaku kelas induk tetapi tidak semuanya. Ketika kita mengubah metode kelas induk, kita menyimpanya.

misalkan :
Hiu tidak seperti ikan bertulang, memiliki kerangka yang terbuat dari tulang rawan alih-alih tulang. Mereka juga memiliki kelopak mata dan tidak bisa berenang mundur. biar bagaimanapun, hiu dapat manuver diri mundur dengan tenggelam.
kita akan menggantikan metode konstruktor __init __ () dan metode swim_backwards ().

class Fish: 
	def __init__(self, first_name, last_name="Fish", skeleton="bone", eyelids=False): 
		self.first_name = first_name 
		self.last_name = last_name 
		self.skeleton = skeleton 
		self.eyelids = eyelids 
	def swim(self): 
		print("The fish is swimming.") 
	def swim_backwards(self): 
		print("The fish can swim backwards.")
        
class Shark(Fish): 
	def __init__(self, first_name, last_name="Shark", skeleton="cartilage", eyelids=True): 
		self.first_name = first_name 
		self.last_name = last_name 
		self.skeleton = skeleton 
		self.eyelids = eyelids 
	def swim_backwards(self): 
		print("The shark cannot swim backwards, but can sink backwards.") 


kelas anak memberikan implementasi yang berbeda untuk metode yang sudah ditetapkan dan atau diterapkan di kelas induknya atau salah satu dari kelas induknya. Metode override di kelas anak harus memiliki nama, tanda tangan, dan parameter yang sama dengan yang ada di kelas induknya.

terdiri dari: property atau method, property dan method

>>super : fungsi super () paling sering di gunakan dalam metode __init__ karna fungsi method tersebut sering digunakan dalam sebuah method, oleh karna itu perlu menambah beberapa keunikan ke kelas anak dan kemudian menyelesaikan proses mengeset nilai awal suatu variable dari class orang tua(class induk)
contoh :

class Trout(Fish): 
	def __init__(self, water = "freshwater"): 
		self.water = water 
		super().__init__(self) 
		Fish.__init__(self)

>>Multiple inheritance : yaitu sebuah class yang dapat mewarisi atribut dan method(metode) dari lebih satu class induk
contoh :

class Murid:

    def __init__(self):
        self.nama = input("Nama: ")
        
    def display(self):
        print("Nama: ",self.nama)
   
class NilaiPelajaran:
 
    def __init__(self):
        print("Nilai Pelajaran")
        self.math = int(input("Math: "))
        self.biology = int(input("Biology: "))
   
    def display(self):
        print("Rata2 Nilai: ", (self.math + self.biology)/2 )
        
        
class student(Murid, NilaiPelajaran):
    def __init__(self):
        Murid.__init__(self)
        NilaiPelajaran.__init__(self)
        
    def result(self):
        Murid.display(self)
        NilaiPelajaran.display(self)
        
stu1 = student()
stu2 = student()

stu1.result()
stu2.result()

---------------------------------
